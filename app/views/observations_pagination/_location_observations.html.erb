<%# Ensure that the location is public by a UserLocations.find_public_by_id, if needed.  Run the search with the context of the location's user.  Instruct the search to return only public observations.  publicize! the results %>

<% location ||= params[:id] %>
<% location = UserLocation.find_by_id(location) %>
<% if location.andand.user != current_user %>
	<% location = UserLocation.find_public_by_id(location.id) %>
<% end %>

<% if location %>
	<% cache :controller => 'observations_pagination', :action => 'location_observations', :user => location.user.id, :id => location.id, :type => params[:type], :sort => params[:sort], :no_display_change => params[:no_display_change], :page => params[:page] || 1, :render_for => logged_in? ? current_user.id : 'public' do %>
		<% search = Birdstack::Search.new(location.user, {:observation_location_name => {:id => [location.id]}}, false, current_user) %>

		<%= render :partial => 'shared/observations_frame', :locals => {:url => {:controller => 'observations_pagination', :action => 'location', :id => location.id}, :search => search} %>
	<% end %>
<% else %>
	Unable to find location
<% end %>
